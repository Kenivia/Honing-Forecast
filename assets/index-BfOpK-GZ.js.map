{"version":3,"file":"index-BfOpK-GZ.js","sources":["../../node_modules/react-dom/client.js","../../src/Frontend/features/honing_forecast/HoningForecastUI.tsx","../../src/Frontend/pages/HoningForecastPage.tsx","../../src/Frontend/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useEffect, useRef, useState, useMemo } from 'react'\nimport \"./CheckboxRow.css\"\nimport { styles } from './styles.ts'\nimport { INPUT_LABELS, TOP_ROWS, TOP_COLS, BOTTOM_ROWS, BOTTOM_COLS, } from './constants.ts'\nimport { readSettings, writeSettings } from './Settings.ts'\nimport ControlPanel from './ControlPanel.tsx'\nimport NormalHoningPanel from './NormalHoningPanel.tsx'\nimport AdvancedHoningPanel from './AdvancedHoningPanel.tsx'\nimport ChanceToCostSection from './ChanceToCostSection.tsx'\nimport CostToChanceSection from './CostToChanceSection.tsx'\n// const CostToChanceSection = React.lazy(() => import('./CostToChanceSection.tsx'));\n\nimport GambaSection from \"./GambaSection.tsx\"\n// const GambaSection = React.lazy(() => import('./GambaSection.tsx'));\nimport Separator from './Separator.tsx'\nimport { TooltipState, createTooltipHandlers, renderTooltip } from './Tooltip.tsx'\nimport Icon from '../../components/Icon.tsx'\n\nimport { GridMouseDownLogic, mouseMoveLogic, createMouseUpHandler } from \"./Marquee.ts\"\nimport { createClearAll, createFillRandom, createFillDemo } from './ControlPanelFunctions.ts'\nimport { buildPayload, createStartCancelableWorker, createHandleCallWorker } from './Debounce.ts'\nimport { ticksToCounts, countsToTicks } from './utils.ts'\n\nexport default function HoningForecastUI() {\n\n    const [topGrid, setTopGrid] = useState(() => Array.from({ length: TOP_ROWS }, () => Array.from({ length: TOP_COLS }, () => false)))\n    const [bottomGrid, setBottomGrid] = useState(() => Array.from({ length: BOTTOM_ROWS }, () => Array(BOTTOM_COLS).fill(false)))\n    const [budget_inputs, set_budget_inputs] = useState(() => Object.fromEntries(INPUT_LABELS.map((l) => [l, '0'])))\n    const [autoOptimization, setAutoOptimization] = useState(true)\n    const [userMatsValue, setUserMatsValue] = useState(() => Object.fromEntries(INPUT_LABELS.slice(0, 7).map((l) => (l == \"Gold\") ? [l, \"1\"] : [l, '0'])))\n    const [desired_chance, set_desired_chance] = useState(() => '50')\n    const [uncleaned_desired_chance, set_uncleaned_desired_chance] = useState(() => '50')\n    const [adv_hone_strategy, set_adv_hone_strategy_change] = useState(() => 'No juice')\n    const [express_event, set_express_event] = useState(() => true)\n    const [bucketCount, _setBucketCount] = useState(() => \"100\")\n    const [prev_checked_arr, set_prev_checked_arr] = useState(() => Array.from({ length: TOP_COLS }, () => false))\n    const [prev_checked_arr_bottom, set_prev_checked_arr_bottom] = useState(() => Array.from({ length: BOTTOM_COLS }, () => false))\n    const [cumulativeGraph, setCumulativeGraph] = useState<boolean>(false)\n    const [dataSize, setDataSize] = useState<string>(() => '100000')\n    const [activePage, setActivePage] = useState<'chance-to-cost' | 'cost-to-chance' | 'gamba'>('chance-to-cost')\n    const [mainScale, setMainScale] = useState<number>(1)\n    const [zoomCompensation, setZoomCompensation] = useState<number>(1)\n\n    // Lock x-axis state (shared across all graphs)\n    const [lockXAxis, setLockXAxis] = useState<boolean>(false)\n    const [lockedMins, setLockedMins] = useState<number[] | null>(null)\n    const [lockedMaxs, setLockedMaxs] = useState<number[] | null>(null)\n    const [showAverage, setShowAverage] = useState<boolean>(false)\n    const [useGridInput, setUseGridInput] = useState<boolean>(true)\n\n    // Numeric input state for when useGridInput is false\n    const [normalCounts, setNormalCounts] = useState<number[][]>(() => Array.from({ length: 2 }, () => Array(TOP_COLS).fill(0)))\n    const [advCounts, setAdvCounts] = useState<number[][]>(() => Array.from({ length: 2 }, () => Array(BOTTOM_COLS).fill(0)))\n\n    // marquee state & refs (kept here so grids stay presentational)\n    const topGridRef = useRef<HTMLDivElement | null>(null)\n    const bottomGridRef = useRef<HTMLDivElement | null>(null)\n    const mainRef = useRef<HTMLDivElement | null>(null)\n    // const controlsRef = useRef<HTMLDivElement | null>(null)\n    const [marquee, setMarquee] = useState<any>({ active: false, grid: null, startR: 0, startC: 0, endR: 0, endC: 0, startClientX: 0, startClientY: 0, endClientX: 0, endClientY: 0, initialState: false })\n    const [marqueeRect, setMarqueeRect] = useState<any>(null)\n    const marqueeRef = useRef(marquee)\n    useEffect(() => { marqueeRef.current = marquee }, [marquee])\n\n    // tooltip state & handlers\n    const [tooltip, setTooltip] = useState<TooltipState>({\n        visible: false,\n        type: null,\n        x: 0,\n        y: 0,\n        content: null,\n        upgradeData: null\n    })\n    const tooltipHandlers = createTooltipHandlers(setTooltip)\n\n    // ----- Load saved UI state on mount -----\n    useEffect(() => {\n        try {\n            readSettings(setTopGrid,\n                setBottomGrid,\n                set_adv_hone_strategy_change,\n                set_express_event,\n                set_prev_checked_arr,\n                set_prev_checked_arr_bottom,\n                set_desired_chance,\n                set_budget_inputs,\n                setAutoOptimization,\n                setUserMatsValue,\n                setCumulativeGraph,\n                setDataSize,\n                setUseGridInput,\n                setNormalCounts,\n                setAdvCounts)\n\n        } catch (e) {\n            // ignore corrupted storage\n        }\n    }, [])\n\n    // Initialize uncleaned_desired_chance from desired_chance after settings load\n    useEffect(() => {\n        set_uncleaned_desired_chance(desired_chance)\n    }, [desired_chance])\n\n    // Sync topGrid changes to normalCounts\n    useEffect(() => {\n        const newNormalCounts = ticksToCounts(topGrid)\n        setNormalCounts(newNormalCounts)\n    }, [topGrid])\n\n    // Sync bottomGrid changes to advCounts\n    useEffect(() => {\n        const newAdvCounts = ticksToCounts(bottomGrid)\n        setAdvCounts(newAdvCounts)\n    }, [bottomGrid])\n\n    // ----- Responsive scaling based on window width -----\n    useEffect(() => {\n        const updateScale = () => {\n            const width = window.innerWidth\n            if (width < 1200) {\n                const scale = Math.max(0, width / 1200)\n                setMainScale(scale)\n            } else {\n                setMainScale(1)\n            }\n        }\n\n        // Set initial scale\n        updateScale()\n\n        // Add resize listener\n        window.addEventListener('resize', updateScale)\n\n        return () => {\n            window.removeEventListener('resize', updateScale)\n        }\n    }, [])\n\n    // ----- Zoom detection for tooltip compensation -----\n    useEffect(() => {\n        let previousPixelRatio = window.devicePixelRatio\n\n        const checkZoom = () => {\n            const currentPixelRatio = window.devicePixelRatio\n            if (currentPixelRatio !== previousPixelRatio) {\n                previousPixelRatio = currentPixelRatio\n                // Calculate compensation factor to keep tooltips constant size\n                // When zoom increases (devicePixelRatio > 1), we scale down tooltips\n                const compensation = 1 / currentPixelRatio\n                setZoomCompensation(compensation)\n            }\n        }\n\n        // Set initial zoom compensation\n        setZoomCompensation(1 / window.devicePixelRatio)\n\n        // Add resize listener to detect zoom changes\n        window.addEventListener('resize', checkZoom)\n\n        return () => {\n            window.removeEventListener('resize', checkZoom)\n        }\n    }, [])\n\n    // ----- Persist UI state (debounced) -----\n    const saveTimerRef = useRef<number | null>(null)\n    useEffect(() => {\n        if (saveTimerRef.current) {\n            window.clearTimeout(saveTimerRef.current)\n            saveTimerRef.current = null\n        }\n        saveTimerRef.current = window.setTimeout(() => {\n            try {\n                writeSettings(\n                    topGrid,\n                    bottomGrid,\n                    adv_hone_strategy,\n                    express_event,\n                    prev_checked_arr,\n                    prev_checked_arr_bottom,\n                    desired_chance,\n                    budget_inputs,\n                    autoOptimization,\n                    userMatsValue,\n                    cumulativeGraph,\n                    dataSize,\n                    useGridInput,\n                    normalCounts,\n                    advCounts)\n            } catch (e) {\n                // ignore quota or serialization errors\n            }\n            saveTimerRef.current = null\n        }, 250)\n        return () => {\n            if (saveTimerRef.current) {\n                window.clearTimeout(saveTimerRef.current)\n                saveTimerRef.current = null\n            }\n        }\n    }, [topGrid, bottomGrid, adv_hone_strategy, express_event, prev_checked_arr, prev_checked_arr_bottom, desired_chance, budget_inputs, autoOptimization, userMatsValue, cumulativeGraph, dataSize, useGridInput, normalCounts, advCounts])\n\n    const onGridMouseDown = GridMouseDownLogic({\n        topGridRef,\n        bottomGridRef,\n        marqueeRef,\n        topGrid,\n        bottomGrid,\n        setMarquee,\n    });\n\n    useEffect(() => {\n        const temp_fn = function (ev: MouseEvent) { mouseMoveLogic(ev, marqueeRef, topGridRef, bottomGridRef, setMarquee) }\n\n        // Helper function to convert touch event to mouse event\n        const createMouseEventFromTouch = (touchEvent: TouchEvent, type: 'mousemove' | 'mouseup'): MouseEvent => {\n            const touch = touchEvent.touches[0] || touchEvent.changedTouches[0];\n            return {\n                ...touchEvent,\n                type,\n                clientX: touch.clientX,\n                clientY: touch.clientY,\n                button: 0,\n                buttons: type === 'mousemove' ? 1 : 0,\n                preventDefault: touchEvent.preventDefault.bind(touchEvent),\n                stopPropagation: touchEvent.stopPropagation.bind(touchEvent),\n            } as unknown as MouseEvent;\n        };\n\n        const touchMoveHandler = (ev: TouchEvent) => {\n            // Only prevent default if marquee is active (user is dragging on grid)\n            if (marqueeRef.current && marqueeRef.current.active) {\n                ev.preventDefault();\n                const mouseEvent = createMouseEventFromTouch(ev, 'mousemove');\n                mouseMoveLogic(mouseEvent, marqueeRef, topGridRef, bottomGridRef, setMarquee);\n            }\n        };\n\n        window.addEventListener('mousemove', temp_fn)\n        window.addEventListener('touchmove', touchMoveHandler, { passive: false })\n        return () => {\n            window.removeEventListener('mousemove', temp_fn)\n            window.removeEventListener('touchmove', touchMoveHandler)\n        }\n    }, [])\n\n    useEffect(() => {\n        const onUp = createMouseUpHandler({\n            marqueeRef,\n            topGridRef,\n            bottomGridRef,\n            setTopGrid,\n            setBottomGrid,\n            set_prev_checked_arr,\n            set_prev_checked_arr_bottom,\n            setMarquee,\n        })\n\n        // Helper function to convert touch event to mouse event\n        const createMouseEventFromTouch = (touchEvent: TouchEvent, type: 'mousemove' | 'mouseup'): MouseEvent => {\n            const touch = touchEvent.touches[0] || touchEvent.changedTouches[0];\n            return {\n                ...touchEvent,\n                type,\n                clientX: touch.clientX,\n                clientY: touch.clientY,\n                button: 0,\n                buttons: type === 'mousemove' ? 1 : 0,\n                preventDefault: touchEvent.preventDefault.bind(touchEvent),\n                stopPropagation: touchEvent.stopPropagation.bind(touchEvent),\n            } as unknown as MouseEvent;\n        };\n\n        const touchEndHandler = (ev: TouchEvent) => {\n            // Only prevent default if marquee is active (user is dragging on grid)\n            if (marqueeRef.current && marqueeRef.current.active) {\n                ev.preventDefault();\n                const mouseEvent = createMouseEventFromTouch(ev, 'mouseup');\n                onUp(mouseEvent);\n            }\n        };\n\n        window.addEventListener('mouseup', onUp)\n        window.addEventListener('touchend', touchEndHandler, { passive: false })\n        return () => {\n            window.removeEventListener('mouseup', onUp)\n            window.removeEventListener('touchend', touchEndHandler)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!marquee.active || !marquee.grid) {\n            setMarqueeRect(null)\n            return\n        }\n        const sx = marquee.startClientX\n        const sy = marquee.startClientY\n        const ex = marquee.endClientX\n        const ey = marquee.endClientY\n        const left = Math.min(sx, ex)\n        const top = Math.min(sy, ey)\n        const width = Math.abs(ex - sx)\n        const height = Math.abs(ey - sy)\n        setMarqueeRect({ left, top, width, height })\n    }, [marquee])\n\n    const onDesiredChange = (value: string) => {\n        set_uncleaned_desired_chance(value)\n\n        // Check if the input is immediately valid (integer 0-100 inclusive)\n        const cleanValue = value.replace(/[^0-9]/g, '')\n        const numValue = parseInt(cleanValue)\n\n        if (cleanValue === value && !isNaN(numValue) && numValue >= 0 && numValue <= 100) {\n            set_desired_chance(cleanValue)\n        }\n    }\n\n    const onDesiredBlur = () => {\n        const cleanValue = uncleaned_desired_chance.replace(/[^0-9]/g, '')\n        const numValue = parseInt(cleanValue)\n\n        if (cleanValue === '' || isNaN(numValue)) {\n            // If empty or invalid, reset to current desired_chance\n            set_uncleaned_desired_chance(desired_chance)\n        } else if (numValue > 100) {\n            // If over 100, cap at 100\n            set_desired_chance('100')\n            set_uncleaned_desired_chance('100')\n        } else if (numValue < 0) {\n            // If negative, set to 0\n            set_desired_chance('0')\n            set_uncleaned_desired_chance('0')\n        } else {\n            // Valid input, update both\n            set_desired_chance(cleanValue)\n            set_uncleaned_desired_chance(cleanValue)\n        }\n    }\n    const adv_hone_strategy_change = (value: string) => set_adv_hone_strategy_change(value)\n\n    // Lock x-axis handler\n    const onToggleLockXAxis = () => {\n        setLockXAxis(prev => {\n            const newVal = !prev;\n            if (!prev) {\n                // we're turning it ON: snapshot current mins/maxs from cached data\n                const currentMins = cachedChanceGraphData?.hist_mins || cachedCostGraphData?.hist_mins || null;\n                const currentMaxs = cachedChanceGraphData?.hist_maxs || cachedCostGraphData?.hist_maxs || null;\n                setLockedMins(currentMins ? currentMins.slice() : null);\n                setLockedMaxs(currentMaxs ? currentMaxs.slice() : null);\n            } else {\n                // turning it OFF: clear snapshots\n                setLockedMins(null);\n                setLockedMaxs(null);\n            }\n            return newVal;\n        });\n    };\n\n    // Handler for numeric input changes\n    const handleNumericInputChange = (grid: 'top' | 'bottom', row: number, col: number, value: number) => {\n        if (grid === 'top') {\n            setNormalCounts(prev => {\n                const newCounts = prev.map(row => [...row])\n                newCounts[row === 4 ? 0 : 1][col] = value\n                return newCounts\n            })\n        } else {\n            setAdvCounts(prev => {\n                const newCounts = prev.map(row => [...row])\n                newCounts[row === 4 ? 0 : 1][col] = value\n                return newCounts\n            })\n        }\n    }\n\n    // Handler for switching between grid input modes\n    const handleUseGridInputChange = (newValue: boolean) => {\n        if (newValue !== useGridInput) {\n            if (newValue) {\n                // Switching to grid input mode - convert counts to ticks\n                const newTopGrid = countsToTicks(normalCounts)\n                const newBottomGrid = countsToTicks(advCounts)\n                setTopGrid(newTopGrid)\n                setBottomGrid(newBottomGrid)\n            } else {\n                // Switching to numeric input mode - convert ticks to counts\n                const newNormalCounts = ticksToCounts(topGrid)\n                const newAdvCounts = ticksToCounts(bottomGrid)\n                setNormalCounts(newNormalCounts)\n                setAdvCounts(newAdvCounts)\n            }\n        }\n        setUseGridInput(newValue)\n    }\n\n    const clearAll = createClearAll({\n        setTopGrid,\n        setBottomGrid,\n        set_prev_checked_arr,\n        set_prev_checked_arr_bottom,\n        set_budget_inputs,\n        setUserMatsValue,\n        set_desired_chance,\n        set_adv_hone_strategy_change,\n        set_express_event,\n        setAutoOptimization,\n        _setBucketCount,\n        setCumulativeGraph,\n        setDataSize,\n        setLockXAxis,\n        setLockedMins,\n        setLockedMaxs,\n        setShowAverage,\n        setUseGridInput,\n        setNormalCounts,\n        setAdvCounts,\n    })\n\n    const fillRandom = createFillRandom({\n        setTopGrid,\n        setBottomGrid,\n        set_desired_chance,\n        set_prev_checked_arr,\n        set_prev_checked_arr_bottom,\n    })\n\n    const fillDemo = createFillDemo({\n        setTopGrid,\n        setBottomGrid,\n        set_budget_inputs,\n        set_desired_chance,\n        set_prev_checked_arr,\n    })\n\n    const [chance_result, set_chance_result] = useState<any>(null)\n    const [cost_result, set_cost_result] = useState<any>(null)\n    const [CostToChanceBusy, setCostToChanceBusy] = useState(false)\n    const [ChanceToCostBusy, setChanceToCostBusy] = useState(false)\n\n    // New states for moved worker calls\n    const [averageCosts, setAverageCosts] = useState<number[] | null>(null)\n    const [upgradeArr, setUpgradeArr] = useState<any[]>([])\n    const [AverageCostBusy, setAverageCostBusy] = useState(false)\n    const [ParserBusy, setParserBusy] = useState(false)\n\n    // Cached graph data to preserve during recomputation\n    const [cachedChanceGraphData, setCachedChanceGraphData] = useState<{ hist_counts?: any, hist_mins?: any, hist_maxs?: any } | null>(null)\n    const [cachedCostGraphData, setCachedCostGraphData] = useState<{ hist_counts?: any, hist_mins?: any, hist_maxs?: any } | null>(null)\n\n    // ---------- New: worker refs & debounce refs ----------\n    const costWorkerRef = useRef<Worker | null>(null)\n    const chanceWorkerRef = useRef<Worker | null>(null)\n    const averageCostWorkerRef = useRef<Worker | null>(null)\n    const parserWorkerRef = useRef<Worker | null>(null)\n    const debounceTimerRef1 = useRef<number | null>(null)\n    const debounceTimerRef2 = useRef<number | null>(null)\n    const debounceTimerRef3 = useRef<number | null>(null)\n    const debounceTimerRef4 = useRef<number | null>(null)\n\n    const payloadBuilder = () => buildPayload({\n        topGrid,\n        bottomGrid,\n        budget_inputs,\n        adv_hone_strategy,\n        express_event,\n        bucketCount,\n        autoOptimization,\n        userMatsValue,\n        dataSize,\n        useGridInput,\n        normalCounts,\n        advCounts,\n    })\n\n    const startCancelableWorker = createStartCancelableWorker({\n        costWorkerRef,\n        chanceWorkerRef,\n        averageCostWorkerRef,\n        parserWorkerRef,\n        setCostToChanceBusy,\n        setChanceToCostBusy,\n        setAverageCostBusy,\n        setParserBusy,\n        set_chance_result,\n        set_cost_result,\n        setAverageCosts,\n        setUpgradeArr,\n        setCachedChanceGraphData,\n        setCachedCostGraphData,\n    })\n\n    const HandleCallWorker = createHandleCallWorker({\n        startCancelableWorker,\n        buildPayload: payloadBuilder,\n    })\n\n    // ---------- Automatic triggers with debounce ----------\n    // We'll watch serialized versions of the inputs to detect deep changes\n    const budgetKey = useMemo(() => JSON.stringify(budget_inputs), [budget_inputs])\n    // const desiredKey = useMemo(() => String(desired_chance), [desired_chance])\n    const advStrategyKey = useMemo(() => String(adv_hone_strategy), [adv_hone_strategy])\n    const expressEventKey = useMemo(() => String(express_event), [express_event])\n    const graphBucketSizeKey = useMemo(() => String(bucketCount), [bucketCount])\n    const autoOptKey = useMemo(() => String(autoOptimization), [autoOptimization])\n    const userMatsKey = useMemo(() => JSON.stringify(userMatsValue), [userMatsValue])\n    const dataSizeKey = useMemo(() => String(dataSize), [dataSize])\n    // const useGridInputKey = useMemo(() => String(useGridInput), [useGridInput])\n    const normalCountsKey = useMemo(() => JSON.stringify(normalCounts), [normalCounts])\n    const advCountsKey = useMemo(() => JSON.stringify(advCounts), [advCounts])\n\n    // When budget or grids or strategy change -> run CostToChance (budget -> cost->chance)\n    useEffect(() => {\n        // clear existing timer\n        if (debounceTimerRef1.current) {\n            window.clearTimeout(debounceTimerRef1.current)\n            debounceTimerRef1.current = null\n        }\n        // start new delayed work\n        debounceTimerRef1.current = window.setTimeout(() => {\n            const payload = payloadBuilder()\n            startCancelableWorker('CostToChance', payload)\n            debounceTimerRef1.current = null\n        }, 100) // 100ms debounce\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [budgetKey, advStrategyKey, expressEventKey, graphBucketSizeKey, autoOptKey, userMatsKey, dataSizeKey, normalCountsKey, advCountsKey])\n\n    // When desired chance or grids or strategy change -> run ChanceToCost (chance -> cost)\n    useEffect(() => {\n        if (debounceTimerRef2.current) {\n            window.clearTimeout(debounceTimerRef2.current)\n            debounceTimerRef2.current = null\n        }\n        debounceTimerRef2.current = window.setTimeout(() => {\n            const payload = payloadBuilder()\n            startCancelableWorker('ChanceToCost', payload)\n            debounceTimerRef2.current = null\n        }, 100)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [advStrategyKey, expressEventKey, graphBucketSizeKey, dataSizeKey, normalCountsKey, advCountsKey])\n\n    // When grids or strategy change -> run AverageCost (for average cost calculation)\n    useEffect(() => {\n        if (debounceTimerRef3.current) {\n            window.clearTimeout(debounceTimerRef3.current)\n            debounceTimerRef3.current = null\n        }\n        debounceTimerRef3.current = window.setTimeout(() => {\n            if (AnythingTicked) {\n                const payload = payloadBuilder()\n                startCancelableWorker('AverageCost', payload)\n            } else {\n                setAverageCosts(null)\n            }\n            debounceTimerRef3.current = null\n        }, 100)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [advStrategyKey, expressEventKey, graphBucketSizeKey, dataSizeKey, normalCountsKey, advCountsKey])\n\n    // When grids or strategy change -> run ParserUnified (for upgrade array)\n    useEffect(() => {\n        if (debounceTimerRef4.current) {\n            window.clearTimeout(debounceTimerRef4.current)\n            debounceTimerRef4.current = null\n        }\n        debounceTimerRef4.current = window.setTimeout(() => {\n            const payload = payloadBuilder()\n            startCancelableWorker('ParserUnified', payload)\n            debounceTimerRef4.current = null\n        }, 100)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [advStrategyKey, expressEventKey, graphBucketSizeKey, dataSizeKey, normalCountsKey, advCountsKey])\n\n    // Cleanup on unmount: terminate any running workers and clear timers\n    useEffect(() => {\n        return () => {\n            if (costWorkerRef.current) {\n                try { costWorkerRef.current.terminate() } catch (e) { ; }\n                costWorkerRef.current = null\n            }\n            if (chanceWorkerRef.current) {\n                try { chanceWorkerRef.current.terminate() } catch (e) { ; }\n                chanceWorkerRef.current = null\n            }\n            if (averageCostWorkerRef.current) {\n                try { averageCostWorkerRef.current.terminate() } catch (e) { ; }\n                averageCostWorkerRef.current = null\n            }\n            if (parserWorkerRef.current) {\n                try { parserWorkerRef.current.terminate() } catch (e) { ; }\n                parserWorkerRef.current = null\n            }\n            if (debounceTimerRef1.current) {\n                window.clearTimeout(debounceTimerRef1.current)\n                debounceTimerRef1.current = null\n            }\n            if (debounceTimerRef2.current) {\n                window.clearTimeout(debounceTimerRef2.current)\n                debounceTimerRef2.current = null\n            }\n            if (debounceTimerRef3.current) {\n                window.clearTimeout(debounceTimerRef3.current)\n                debounceTimerRef3.current = null\n            }\n            if (debounceTimerRef4.current) {\n                window.clearTimeout(debounceTimerRef4.current)\n                debounceTimerRef4.current = null\n            }\n        }\n    }, [])\n\n    // styles and column defs moved to ./styles\n    const AnythingTicked = useMemo(() => normalCounts[0].some(x => x > 0) ||\n        normalCounts[1].some(x => x > 0) ||\n        advCounts[0].some(x => x > 0) ||\n        advCounts[1].some(x => x > 0), [normalCounts, advCounts])\n    return (\n\n        <div style={styles.pageContainer}>\n            {\n                marqueeRect ? (\n                    <div style={{ position: 'fixed', left: marqueeRect.left, top: marqueeRect.top, width: marqueeRect.width, height: marqueeRect.height, background: 'var(--marquee-bg)', border: '2px solid var(--marquee-border)', pointerEvents: 'none', zIndex: 9999 }} />\n                ) : null\n            }\n            {renderTooltip(tooltip, mainScale, zoomCompensation)}\n\n\n            <div ref={mainRef} style={{\n                ...styles.mainContainer,\n                transform: `scale(${mainScale})`,\n                transformOrigin: 'top center'\n            }}>\n\n                <div style={{ display: \"flex\", flexDirection: \"row\", gap: 6 }}>\n                    <Icon iconName=\"Forecast Icon\" size={64} style={{ display: 'flex', alignItems: 'center', gap: '12px' }} display_text=\"\" />\n                    <h1 style={styles.heading}>Honing Forecast</h1>\n                </div>\n\n                {/* Three panels in a responsive flex layout */}\n                <div style={{ display: 'flex', gap: 'var(--spacing-2xl)', alignItems: \"flex-start\", flexWrap: 'wrap', justifyContent: 'flex-start' }}>\n                    <NormalHoningPanel\n                        topGrid={topGrid}\n                        setTopGrid={setTopGrid}\n                        prev_checked_arr={prev_checked_arr}\n                        set_prev_checked_arr={set_prev_checked_arr}\n                        topGridRef={topGridRef}\n                        marquee={marquee}\n                        onGridMouseDown={onGridMouseDown}\n                        useGridInput={useGridInput}\n                        normalCounts={normalCounts}\n                        onNumericInputChange={handleNumericInputChange}\n                    />\n\n                    <AdvancedHoningPanel\n                        bottomGrid={bottomGrid}\n                        setBottomGrid={setBottomGrid}\n                        prev_checked_arr_bottom={prev_checked_arr_bottom}\n                        set_prev_checked_arr_bottom={set_prev_checked_arr_bottom}\n                        bottomGridRef={bottomGridRef}\n                        marquee={marquee}\n                        onGridMouseDown={onGridMouseDown}\n                        adv_hone_strategy={adv_hone_strategy}\n                        adv_hone_strategy_change={adv_hone_strategy_change}\n                        useGridInput={useGridInput}\n                        advCounts={advCounts}\n                        onNumericInputChange={handleNumericInputChange}\n                    />\n\n                    <ControlPanel\n                        controlsLeft={null}\n                        mainScale={mainScale}\n                        fillDemo={fillDemo}\n                        fillRandom={fillRandom}\n                        clearAll={clearAll}\n                        express_event={express_event}\n                        set_express_event={set_express_event}\n                        cumulativeGraph={cumulativeGraph}\n                        setCumulativeGraph={setCumulativeGraph}\n                        dataSize={dataSize}\n                        setDataSize={setDataSize}\n                        lockXAxis={lockXAxis}\n                        onToggleLockXAxis={onToggleLockXAxis}\n                        useGridInput={useGridInput}\n                        setUseGridInput={handleUseGridInputChange}\n                    />\n                </div>\n\n                {/* Page Separator */}\n                <Separator activePage={activePage} onPageChange={setActivePage} />\n\n                {/* Always-rendered pages with display toggle */}\n                <div className={activePage === 'chance-to-cost' ? 'page' : 'page page--hidden'} aria-hidden={activePage !== 'chance-to-cost'}>\n                    <ChanceToCostSection\n                        desired_chance={desired_chance}\n                        uncleaned_desired_chance={uncleaned_desired_chance}\n                        onDesiredChange={onDesiredChange}\n                        onDesiredBlur={onDesiredBlur}\n                        cost_result={cost_result}\n                        cachedCostGraphData={cachedCostGraphData}\n                        AnythingTicked={AnythingTicked}\n                        ChanceToCostBusy={ChanceToCostBusy}\n                        cumulativeGraph={cumulativeGraph}\n                        lockXAxis={lockXAxis}\n                        lockedMins={lockedMins}\n                        lockedMaxs={lockedMaxs}\n                        // Show Average checkbox props\n                        showAverage={showAverage}\n                        setShowAverage={setShowAverage}\n                        // Moved worker call results\n                        averageCosts={averageCosts}\n                        AverageCostBusy={AverageCostBusy}\n                    />\n                </div>\n\n                <div className={activePage === 'cost-to-chance' ? 'page' : 'page page--hidden'} aria-hidden={activePage !== 'cost-to-chance'}>\n                    <CostToChanceSection\n                        budget_inputs={budget_inputs}\n                        set_budget_inputs={set_budget_inputs}\n                        userMatsValue={userMatsValue}\n                        setUserMatsValue={setUserMatsValue}\n                        autoOptimization={autoOptimization}\n                        setAutoOptimization={setAutoOptimization}\n                        chance_result={chance_result}\n                        cachedChanceGraphData={cachedChanceGraphData}\n                        AnythingTicked={AnythingTicked}\n                        CostToChanceBusy={CostToChanceBusy}\n                        cumulativeGraph={cumulativeGraph}\n                        lockXAxis={lockXAxis}\n                        lockedMins={lockedMins}\n                        lockedMaxs={lockedMaxs}\n                    />\n                </div>\n\n                <div className={activePage === 'gamba' ? 'page' : 'page page--hidden'} aria-hidden={activePage !== 'gamba'}>\n                    <GambaSection\n                        budget_inputs={budget_inputs}\n                        set_budget_inputs={set_budget_inputs}\n                        userMatsValue={userMatsValue}\n                        setUserMatsValue={setUserMatsValue}\n                        topGrid={topGrid}\n                        bottomGrid={bottomGrid}\n                        adv_hone_strategy={adv_hone_strategy}\n                        express_event={express_event}\n                        desired_chance={desired_chance}\n                        bucketCount={bucketCount}\n                        autoOptimization={autoOptimization}\n                        dataSize={dataSize}\n                        tooltipHandlers={tooltipHandlers}\n                        chance_result={chance_result}\n                        cachedChanceGraphData={cachedChanceGraphData}\n                        AnythingTicked={AnythingTicked}\n                        CostToChanceBusy={CostToChanceBusy}\n                        cumulativeGraph={cumulativeGraph}\n                        lockXAxis={lockXAxis}\n                        lockedMins={lockedMins}\n                        lockedMaxs={lockedMaxs}\n                        useGridInput={useGridInput}\n                        normalCounts={normalCounts}\n                        advCounts={advCounts}\n                        // Moved worker call results\n                        upgradeArr={upgradeArr}\n                        ParserBusy={ParserBusy}\n                    />\n                </div>\n            </div>\n\n        </div >\n\n    )\n\n}\n","\r\nimport HoningForecastUI from '../features/honing_forecast/HoningForecastUI.tsx'\r\n\r\nexport default function HoningForecastPage() {\r\n    return (\r\n\r\n        <HoningForecastUI />\r\n\r\n\r\n    )\r\n}","import HoningForecastPage from './pages/HoningForecastPage.tsx'\r\n\r\nexport default function App() {\r\n\r\n    return <HoningForecastPage />\r\n\r\n}","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './Frontend/theme.css'\nimport './Frontend/index.css'\nimport App from './Frontend/App.tsx'\n\ncreateRoot(document.getElementById('root')).render(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n)\n\n"],"names":["m","require$$0","client","HoningForecastUI","topGrid","setTopGrid","useState","TOP_ROWS","TOP_COLS","bottomGrid","setBottomGrid","BOTTOM_ROWS","BOTTOM_COLS","budget_inputs","set_budget_inputs","INPUT_LABELS","l","autoOptimization","setAutoOptimization","userMatsValue","setUserMatsValue","desired_chance","set_desired_chance","uncleaned_desired_chance","set_uncleaned_desired_chance","adv_hone_strategy","set_adv_hone_strategy_change","express_event","set_express_event","bucketCount","_setBucketCount","prev_checked_arr","set_prev_checked_arr","prev_checked_arr_bottom","set_prev_checked_arr_bottom","cumulativeGraph","setCumulativeGraph","dataSize","setDataSize","activePage","setActivePage","mainScale","setMainScale","zoomCompensation","setZoomCompensation","lockXAxis","setLockXAxis","lockedMins","setLockedMins","lockedMaxs","setLockedMaxs","showAverage","setShowAverage","useGridInput","setUseGridInput","normalCounts","setNormalCounts","advCounts","setAdvCounts","topGridRef","useRef","bottomGridRef","mainRef","marquee","setMarquee","marqueeRect","setMarqueeRect","marqueeRef","useEffect","tooltip","setTooltip","tooltipHandlers","createTooltipHandlers","readSettings","newNormalCounts","ticksToCounts","newAdvCounts","updateScale","width","scale","previousPixelRatio","checkZoom","currentPixelRatio","compensation","saveTimerRef","writeSettings","onGridMouseDown","GridMouseDownLogic","temp_fn","ev","mouseMoveLogic","createMouseEventFromTouch","touchEvent","type","touch","touchMoveHandler","mouseEvent","onUp","createMouseUpHandler","touchEndHandler","sx","sy","ex","ey","left","top","height","onDesiredChange","value","cleanValue","numValue","onDesiredBlur","adv_hone_strategy_change","onToggleLockXAxis","prev","newVal","currentMins","cachedChanceGraphData","cachedCostGraphData","currentMaxs","handleNumericInputChange","grid","row","col","newCounts","handleUseGridInputChange","newValue","newTopGrid","countsToTicks","newBottomGrid","clearAll","createClearAll","fillRandom","createFillRandom","fillDemo","createFillDemo","chance_result","set_chance_result","cost_result","set_cost_result","CostToChanceBusy","setCostToChanceBusy","ChanceToCostBusy","setChanceToCostBusy","averageCosts","setAverageCosts","upgradeArr","setUpgradeArr","AverageCostBusy","setAverageCostBusy","ParserBusy","setParserBusy","setCachedChanceGraphData","setCachedCostGraphData","costWorkerRef","chanceWorkerRef","averageCostWorkerRef","parserWorkerRef","debounceTimerRef1","debounceTimerRef2","debounceTimerRef3","debounceTimerRef4","payloadBuilder","buildPayload","startCancelableWorker","createStartCancelableWorker","budgetKey","useMemo","advStrategyKey","expressEventKey","graphBucketSizeKey","autoOptKey","userMatsKey","dataSizeKey","normalCountsKey","advCountsKey","payload","AnythingTicked","x","jsxs","styles","jsx","renderTooltip","Icon","NormalHoningPanel","AdvancedHoningPanel","ControlPanel","Separator","ChanceToCostSection","CostToChanceSection","GambaSection","HoningForecastPage","App","createRoot","StrictMode"],"mappings":"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","x_google_ignoreList":[0]}