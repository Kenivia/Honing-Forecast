{"version":3,"file":"cost-to-chance-Dd0b0Cv0.js","sources":["../../src/Frontend/features/honing_forecast/CostToChanceSection.tsx"],"sourcesContent":["import React from 'react'\r\nimport SpreadsheetGrid from '../../components/SpreadsheetGrid.tsx'\r\nimport Graph from '../../components/Graph.tsx'\r\nimport { styles, createColumnDefs, GRAPH_WIDTH, GRAPH_HEIGHT } from './styles.ts'\r\nimport { INPUT_LABELS, OUTPUT_LABELS } from './constants.ts'\r\n\r\ntype CostToChanceSectionProps = {\r\n    budget_inputs: any\r\n    set_budget_inputs: React.Dispatch<React.SetStateAction<any>>\r\n    userMatsValue: any\r\n    setUserMatsValue: React.Dispatch<React.SetStateAction<any>>\r\n    autoOptimization: boolean\r\n    setAutoOptimization: React.Dispatch<React.SetStateAction<boolean>>\r\n    chance_result: any\r\n    cachedChanceGraphData: { hist_counts?: any, hist_mins?: any, hist_maxs?: any } | null\r\n    AnythingTicked: boolean\r\n    CostToChanceBusy: boolean\r\n    cumulativeGraph: boolean\r\n    lockXAxis: boolean\r\n    lockedMins: number[] | null\r\n    lockedMaxs: number[] | null\r\n}\r\n\r\nexport default function CostToChanceSection({\r\n    budget_inputs,\r\n    set_budget_inputs,\r\n    userMatsValue,\r\n    setUserMatsValue,\r\n    autoOptimization,\r\n    setAutoOptimization,\r\n    chance_result,\r\n    cachedChanceGraphData,\r\n    AnythingTicked,\r\n    CostToChanceBusy,\r\n    cumulativeGraph,\r\n    lockXAxis,\r\n    lockedMins,\r\n    lockedMaxs,\r\n}: CostToChanceSectionProps) {\r\n    const { costToChanceColumnDefs } = createColumnDefs(autoOptimization)\r\n\r\n    return (\r\n        <>\r\n            {/* <h3 style={{ color: 'var(--text-primary)', fontSize: 'var(--font-size-base)', fontWeight: 'var(--font-weight-semibold)', margin: '16px 0 0px 0' }}>Cost to Chance</h3> */}\r\n            <div style={{ ...styles.inputSection, flexDirection: \"row\", maxWidth: \"1200px\", width: \"100%\" }}>\r\n                <div style={{ display: 'flex', gap: autoOptimization ? 110 : 20, alignItems: 'flex-start' }}>\r\n                    <div style={{ display: 'flex', flexDirection: \"column\", gap: 0, alignItems: 'flex-start', justifyContent: 'start', width: autoOptimization ? 210 : 300 }}>\r\n                        <div style={{ marginBottom: 16, width: autoOptimization ? 210 : 310 }}>\r\n                            <SpreadsheetGrid\r\n                                columnDefs={costToChanceColumnDefs}\r\n                                labels={INPUT_LABELS}\r\n                                sheet_values={budget_inputs}\r\n                                set_sheet_values={set_budget_inputs}\r\n                                secondaryValues={userMatsValue}\r\n                                setSecondaryValues={setUserMatsValue}\r\n                            />\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 8 }}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"auto-optimization\"\r\n                                checked={autoOptimization}\r\n                                onChange={(e) => setAutoOptimization(e.target.checked)}\r\n                                style={{ accentColor: 'var(--control-checked-bg)' }}\r\n                            />\r\n                            <label htmlFor=\"auto-optimization\" style={{ color: 'var(--text-primary)', fontSize: 'var(--font-size-sm)', whiteSpace: 'nowrap' }}>\r\n                                Automatic Juice and Special leap<br />\r\n                                optimization(Normal honing only)\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 12, marginBottom: 8 }}>\r\n                            <div style={{ ...styles.inputLabelCell, whiteSpace: 'nowrap', backgroundColor: 'var(--bg-tertiary)' }}>Chance of Success</div>\r\n                            <div style={{ ...styles.inputCell, border: 'none', background: \"transparent\", color: 'var(--text-success)', fontSize: 'var(--font-size-xl)' }}>{chance_result ? (String(chance_result.chance) + '%') : '-'}</div>\r\n\r\n                        </div>\r\n                        {chance_result && (Number(chance_result.budgets_red_remaining) < 0 || Number(chance_result.budgets_blue_remaining) < 0) && (\r\n                            <div style={{ marginLeft: 12, color: '#f59e0b', fontSize: 'var(--font-size-sm)', whiteSpace: 'nowrap' }}>\r\n                                Invalid result!  Missing roughly {Number(chance_result.budgets_red_remaining) < 0 ? (Number(chance_result.budgets_red_remaining) * -1).toString() + ' red juice' : ''}\r\n                                {(Number(chance_result.budgets_red_remaining) < 0 && Number(chance_result.budgets_blue_remaining) < 0) ? ' and ' : ''}\r\n                                {Number(chance_result.budgets_blue_remaining) < 0 ? (Number(chance_result.budgets_blue_remaining) * -1).toString() + ' blue juice' : \"\"} for Advanced Honing, use \"No Juice\" option or add more juice\r\n                            </div>\r\n                        )}\r\n\r\n                        {chance_result && (\r\n                            <div style={{ marginTop: 4, color: 'var(--text-muted)', fontSize: 'var(--font-size-xs)' }}>Run time: {chance_result.run_time}s</div>\r\n                        )}\r\n                        {(chance_result && (chance_result.upgrade_strings?.length > 0 || chance_result.juice_order_armor?.length > 0 || chance_result.juice_order_weapon?.length > 0)) && (\r\n                            <div style={{ display: 'flex', gap: 0, alignItems: 'flex-start', marginTop: 8 }}>\r\n                                <div>\r\n                                    <div style={{ ...styles.inputLabelCell, marginTop: 0, whiteSpace: 'nowrap', textAlign: \"left\", }}>Individual chances:</div>\r\n                                    <div style={{ marginTop: 4, color: 'var(--text-muted)', fontSize: 'var(--font-size-sm)', whiteSpace: \"wrap\", width: 300 }}>\r\n                                        {(chance_result.reasons || []).map((s: string, idx: number) => (\r\n                                            <div key={\"Fail reason\" + (idx + 1)}>{idx + 1}. {s}</div>\r\n                                        ))}\r\n                                    </div>\r\n                                    {/* <div style={{ ...styles.inputLabelCell, textAlign: \"left\", fontSize: 'var(--font-size-sm)', whiteSpace: \"wrap\", width: 350 }}>\r\n                                        Note: These are not what you will run out *first* - Imagine the game lets you keep tapping & go into debt, these are the chances that you will end up with a negative.(I know this is less intuitive, but it is much harder to calculate what you run out *first*)</div> */}\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <div style={{ ...styles.inputLabelCell, whiteSpace: 'nowrap' }}>Free taps value ranking:</div>\r\n                                    <div style={{ marginTop: 4, color: 'var(--text-muted)', fontSize: 'var(--font-size-sm)', width: 200 }}>\r\n                                        {(chance_result.upgrade_strings || []).map((upgrade: string, index: number) => (\r\n                                            <div key={\"Free tap value\" + (index + 1)}>{index + 1}. {upgrade}</div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div style={{ ...styles.inputLabelCell, whiteSpace: 'nowrap' }}>Red juice (weapon):</div>\r\n                                    <div style={{ marginTop: 4, color: 'var(--text-muted)', fontSize: 'var(--font-size-sm)', width: 220 }}>\r\n                                        {(chance_result.juice_order_weapon || []).map((s: string, idx: number) => (\r\n                                            <div key={\"Red juice value\" + (idx + 1)}>{idx + 1}. {s}</div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div style={{ ...styles.inputLabelCell, whiteSpace: 'nowrap' }}>Blue juice (armor):</div>\r\n                                    <div style={{ marginTop: 4, color: 'var(--text-muted)', fontSize: 'var(--font-size-sm)', width: 300 }}>\r\n                                        {(chance_result.juice_order_armor || []).map((s: string, idx: number) => (\r\n                                            <div key={\"Blue juice value\" + (idx + 1)}>{idx + 1}. {s}</div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div style={{ flex: 1 }}>\r\n                        <Graph\r\n                            title=\"Cost distribution\"\r\n                            labels={OUTPUT_LABELS}\r\n                            counts={AnythingTicked ? (chance_result?.hist_counts || cachedChanceGraphData?.hist_counts) : null}\r\n                            mins={chance_result?.hist_mins || cachedChanceGraphData?.hist_mins}\r\n                            maxs={chance_result?.hist_maxs || cachedChanceGraphData?.hist_maxs}\r\n                            width={GRAPH_WIDTH}\r\n                            height={GRAPH_HEIGHT}\r\n                            budgets={OUTPUT_LABELS.map(label => Number(budget_inputs[label]))}\r\n                            hasSelection={AnythingTicked}\r\n                            isLoading={CostToChanceBusy}\r\n                            cumulative={cumulativeGraph}\r\n                            lockXAxis={lockXAxis}\r\n                            lockedMins={lockedMins}\r\n                            lockedMaxs={lockedMaxs}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["CostToChanceSection","budget_inputs","set_budget_inputs","userMatsValue","setUserMatsValue","autoOptimization","setAutoOptimization","chance_result","cachedChanceGraphData","AnythingTicked","CostToChanceBusy","cumulativeGraph","lockXAxis","lockedMins","lockedMaxs","costToChanceColumnDefs","createColumnDefs","jsx","Fragment","styles","jsxs","SpreadsheetGrid","INPUT_LABELS","e","_a","_b","_c","idx","upgrade","index","Graph","OUTPUT_LABELS","GRAPH_WIDTH","GRAPH_HEIGHT","label"],"mappings":"gLAuBA,SAAwBA,EAAoB,CACxC,cAAAC,EACA,kBAAAC,EACA,cAAAC,EACA,iBAAAC,EACA,iBAAAC,EACA,oBAAAC,EACA,cAAAC,EACA,sBAAAC,EACA,eAAAC,EACA,iBAAAC,EACA,gBAAAC,EACA,UAAAC,EACA,WAAAC,EACA,WAAAC,CACJ,EAA6B,WACzB,KAAM,CAAE,uBAAAC,CAAA,EAA2BC,EAAiBX,CAAgB,EAEpE,OACIY,EAAAA,IAAAC,EAAAA,SAAA,CAEI,SAAAD,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,GAAGE,EAAO,aAAc,cAAe,MAAO,SAAU,SAAU,MAAO,MAAA,EACnF,SAAAC,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,IAAKf,EAAmB,IAAM,GAAI,WAAY,YAAA,EACzE,SAAA,CAAAe,OAAC,OAAI,MAAO,CAAE,QAAS,OAAQ,cAAe,SAAU,IAAK,EAAG,WAAY,aAAc,eAAgB,QAAS,MAAOf,EAAmB,IAAM,KAC/I,SAAA,CAAAY,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,aAAc,GAAI,MAAOZ,EAAmB,IAAM,GAAA,EAC5D,SAAAY,EAAAA,IAACI,EAAA,CACG,WAAYN,EACZ,OAAQO,EACR,aAAcrB,EACd,iBAAkBC,EAClB,gBAAiBC,EACjB,mBAAoBC,CAAA,CAAA,EAE5B,EAEAgB,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,WAAY,SAAU,IAAK,EAAG,aAAc,CAAA,EACvE,SAAA,CAAAH,EAAAA,IAAC,QAAA,CACG,KAAK,WACL,GAAG,oBACH,QAASZ,EACT,SAAWkB,GAAMjB,EAAoBiB,EAAE,OAAO,OAAO,EACrD,MAAO,CAAE,YAAa,2BAAA,CAA4B,CAAA,EAEtDH,EAAAA,KAAC,QAAA,CAAM,QAAQ,oBAAoB,MAAO,CAAE,MAAO,sBAAuB,SAAU,sBAAuB,WAAY,QAAA,EAAY,SAAA,CAAA,yCAC9F,KAAA,EAAG,EAAE,kCAAA,CAAA,CAE1C,CAAA,EACJ,EAEAA,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,WAAY,SAAU,IAAK,GAAI,aAAc,CAAA,EACxE,SAAA,CAAAH,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,GAAGE,EAAO,eAAgB,WAAY,SAAU,gBAAiB,oBAAA,EAAwB,SAAA,mBAAA,CAAiB,EACxHF,EAAAA,IAAC,OAAI,MAAO,CAAE,GAAGE,EAAO,UAAW,OAAQ,OAAQ,WAAY,cAAe,MAAO,sBAAuB,SAAU,uBAA0B,SAAAZ,EAAiB,OAAOA,EAAc,MAAM,EAAI,IAAO,GAAA,CAAI,CAAA,EAE/M,EACCA,IAAkB,OAAOA,EAAc,qBAAqB,EAAI,GAAK,OAAOA,EAAc,sBAAsB,EAAI,WAChH,MAAA,CAAI,MAAO,CAAE,WAAY,GAAI,MAAO,UAAW,SAAU,sBAAuB,WAAY,QAAA,EAAY,SAAA,CAAA,oCACnE,OAAOA,EAAc,qBAAqB,EAAI,GAAK,OAAOA,EAAc,qBAAqB,EAAI,IAAI,SAAA,EAAa,aAAe,GACjK,OAAOA,EAAc,qBAAqB,EAAI,GAAK,OAAOA,EAAc,sBAAsB,EAAI,EAAK,QAAU,GAClH,OAAOA,EAAc,sBAAsB,EAAI,GAAK,OAAOA,EAAc,sBAAsB,EAAI,IAAI,SAAA,EAAa,cAAgB,GAAG,+DAAA,EAC5I,EAGHA,GACGa,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,UAAW,EAAG,MAAO,oBAAqB,SAAU,qBAAA,EAAyB,SAAA,CAAA,aAAWb,EAAc,SAAS,GAAA,EAAC,EAEhIA,MAAkBiB,EAAAjB,EAAc,kBAAd,YAAAiB,EAA+B,QAAS,KAAKC,EAAAlB,EAAc,oBAAd,YAAAkB,EAAiC,QAAS,KAAKC,EAAAnB,EAAc,qBAAd,YAAAmB,EAAkC,QAAS,IACvJN,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,EAAG,WAAY,aAAc,UAAW,CAAA,EACxE,SAAA,CAAAA,OAAC,MAAA,CACG,SAAA,CAAAH,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,GAAGE,EAAO,eAAgB,UAAW,EAAG,WAAY,SAAU,UAAW,MAAA,EAAW,SAAA,sBAAmB,EACrHF,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,UAAW,EAAG,MAAO,oBAAqB,SAAU,sBAAuB,WAAY,OAAQ,MAAO,GAAA,EAC9G,UAAAV,EAAc,SAAW,CAAA,GAAI,IAAI,CAAC,EAAWoB,IAC3CP,EAAAA,KAAC,MAAA,CAAqC,SAAA,CAAAO,EAAM,EAAE,KAAG,CAAA,CAAA,EAAvC,eAAiBA,EAAM,EAAkB,CACtD,CAAA,CACL,CAAA,EAIJ,SACC,MAAA,CACG,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,GAAGE,EAAO,eAAgB,WAAY,QAAA,EAAY,SAAA,0BAAA,CAAwB,EACxFF,EAAAA,IAAC,OAAI,MAAO,CAAE,UAAW,EAAG,MAAO,oBAAqB,SAAU,sBAAuB,MAAO,KAC1F,UAAAV,EAAc,iBAAmB,CAAA,GAAI,IAAI,CAACqB,EAAiBC,IACzDT,EAAAA,KAAC,MAAA,CAA0C,SAAA,CAAAS,EAAQ,EAAE,KAAGD,CAAA,CAAA,EAA9C,kBAAoBC,EAAQ,EAA0B,CACnE,CAAA,CACL,CAAA,EACJ,SACC,MAAA,CACG,SAAA,CAAAZ,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,GAAGE,EAAO,eAAgB,WAAY,QAAA,EAAY,SAAA,qBAAA,CAAmB,EACnFF,EAAAA,IAAC,OAAI,MAAO,CAAE,UAAW,EAAG,MAAO,oBAAqB,SAAU,sBAAuB,MAAO,KAC1F,UAAAV,EAAc,oBAAsB,CAAA,GAAI,IAAI,CAAC,EAAWoB,IACtDP,EAAAA,KAAC,MAAA,CAAyC,SAAA,CAAAO,EAAM,EAAE,KAAG,CAAA,CAAA,EAA3C,mBAAqBA,EAAM,EAAkB,CAC1D,CAAA,CACL,CAAA,EACJ,SACC,MAAA,CACG,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,GAAGE,EAAO,eAAgB,WAAY,QAAA,EAAY,SAAA,qBAAA,CAAmB,EACnFF,EAAAA,IAAC,OAAI,MAAO,CAAE,UAAW,EAAG,MAAO,oBAAqB,SAAU,sBAAuB,MAAO,KAC1F,UAAAV,EAAc,mBAAqB,CAAA,GAAI,IAAI,CAAC,EAAWoB,IACrDP,EAAAA,KAAC,MAAA,CAA0C,SAAA,CAAAO,EAAM,EAAE,KAAG,CAAA,CAAA,EAA5C,oBAAsBA,EAAM,EAAkB,CAC3D,CAAA,CACL,CAAA,CAAA,CACJ,CAAA,CAAA,CAEJ,CAAA,EAER,QACC,MAAA,CAAI,MAAO,CAAE,KAAM,GAChB,SAAAV,EAAAA,IAACa,EAAA,CACG,MAAM,oBACN,OAAQC,EACR,OAAQtB,GAAkBF,GAAA,YAAAA,EAAe,eAAeC,GAAA,YAAAA,EAAuB,aAAe,KAC9F,MAAMD,GAAA,YAAAA,EAAe,aAAaC,GAAA,YAAAA,EAAuB,WACzD,MAAMD,GAAA,YAAAA,EAAe,aAAaC,GAAA,YAAAA,EAAuB,WACzD,MAAOwB,EACP,OAAQC,EACR,QAASF,EAAc,IAAIG,GAAS,OAAOjC,EAAciC,CAAK,CAAC,CAAC,EAChE,aAAczB,EACd,UAAWC,EACX,WAAYC,EACZ,UAAAC,EACA,WAAAC,EACA,WAAAC,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CACJ,EACJ,EACJ,CAER"}